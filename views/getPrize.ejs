<!DOCTYPE HTML>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta content="width=device-width, initial-scale=1, maximum-scale=1.0" name="viewport" />
    <title>刮刮乐</title>
   	<script type="text/javascript" src="/javascripts/jquery-1.9.1.js"></script>
	<script type="text/javascript">

/*$('document').ready(function() {
	var backimage = {
		'url': 'http://y2.ifengimg.com/2013/04/07/08384565.gif',
		'img': null
	};
	var canvas = {
		'temp': null,
		'draw': null
	};
	var mouseDown = false;
	// canvas 合成    
	function recompositeCanvases() {
		var main = document.getElementById('main');
		var tempctx = canvas.temp.getContext('2d');
		var mainctx = main.getContext('2d');
		// clear the temp
		canvas.temp.width = canvas.temp.width;
		// 把 canvas.draw 覆蓋到 drawImage 上
		tempctx.drawImage(canvas.draw, 0, 0);
		// 以 source-atop 的方式把 backimage 畫到 tempctx 上
		tempctx.globalCompositeOperation = 'source-atop';
		tempctx.drawImage(backimage.img, 0, 0);
		// mainctx => 灰色前景 (還沒有刮掉的地方)
		mainctx.fillStyle = "#888";
		mainctx.fillRect(0, 0, backimage.img.width, backimage.img.height);
		// 最後把 canvas.temp 覆蓋到 mainctx 上
		mainctx.drawImage(canvas.temp, 0, 0);
	}
	// 畫線
	function scratch(canv, x, y, fresh) {
		var ctx = canv.getContext('2d');
		// 畫筆大小, 形狀...
		ctx.lineWidth = 20;
		ctx.lineCap = ctx.lineJoin = 'round';
		if (fresh) {
			ctx.beginPath();
			// 為了模擬滑動，所以在 x 加上 0.01，不然點一下不會產生反應
			ctx.moveTo(x + 0.01, y);
		}
		ctx.lineTo(x, y);
		ctx.stroke();
	}

	function setupCanvases() {
		var c = document.getElementById('main');
		// 取得圖片長寬
		c.width = backimage.img.width;
		c.height = backimage.img.height;
		canvas.temp = document.createElement('canvas');
		canvas.draw = document.createElement('canvas');
		canvas.temp.width = canvas.draw.width = c.width;
		canvas.temp.height = canvas.draw.height = c.height;
		recompositeCanvases();

		function mousedown_handler(e) {
			var local = getLocalCoords(c, e);
			mouseDown = true;
			scratch(canvas.draw, local.x, local.y, true);
			recompositeCanvases();
			if (e.cancelable) {
				e.preventDefault();
			}
			return false;
		};

		function mousemove_handler(e) {
			if (!mouseDown) {
				return true;
			}
			var local = getLocalCoords(c, e);
			scratch(canvas.draw, local.x, local.y, false);
			recompositeCanvases();
			if (e.cancelable) {
				e.preventDefault();
			}
			return false;
		};

		function mouseup_handler(e) {
			if (mouseDown) {
				mouseDown = false;
				if (e.cancelable) {
					e.preventDefault();
				}
				return false;
			}
			return true;
		};
		// mouse handlers
		c.addEventListener('mousedown', mousedown_handler, false);
		c.addEventListener('touchstart', mousedown_handler, false);
		window.addEventListener('mousemove', mousemove_handler, false);
		window.addEventListener('touchmove', mousemove_handler, false);
		window.addEventListener('mouseup', mouseup_handler, false);
		window.addEventListener('touchend', mouseup_handler, false);
	}
	// 取得座標
	function getLocalCoords(elem, ev) {
		var ox = 0,
			oy = 0;
		var first;
		var pageX, pageY;
		while (elem != null) {
			ox += elem.offsetLeft;
			oy += elem.offsetTop;
			elem = elem.offsetParent;
		}
		if (ev.hasOwnProperty('changedTouches')) {
			first = ev.changedTouches[0];
			pageX = first.pageX;
			pageY = first.pageY;
		} else {
			pageX = ev.pageX;
			pageY = ev.pageY;
		}
		return {
			'x': pageX - ox,
			'y': pageY - oy
		};
	}
	// 動態生一個 img 出來
	backimage.img = document.createElement('img');
	backimage.img.src = backimage.url;
	backimage.img.addEventListener('load', setupCanvases, false);
	
	// reset
	$('#resetbutton').bind('click', function() {
		canvas.draw.width = canvas.draw.width;
		recompositeCanvases();
		return false;
	});
});*/


	jQuery(function($){

		$.fn.getprize = function(options) {
			var opts = $.extend($.fn.getprize.defaults,options || {});
			return this.each(function(){
				var _this = $(this),
					backimage = {
						'url': opts.imgUrl,
						'img': null
					},
					canvas = {
						'temp': null,
						'draw': null
					},
					mouseDown = false;

					function scratch(canv, x, y, fresh) {
						var ctx = canv.getContext('2d');
						// 畫筆大小, 形狀...
						ctx.lineWidth = 20;
						ctx.lineCap = ctx.lineJoin = 'round';
						if (fresh) {
							ctx.beginPath();
							// 為了模擬滑動，所以在 x 加上 0.01，不然點一下不會產生反應
							ctx.moveTo(x + 0.01, y);
						}
						ctx.lineTo(x, y);
						ctx.stroke();
					}

					function getLocalCoords(elem, ev) {
							var ox = 0,
							oy = 0;
						var first;
						var pageX, pageY;
						while (elem != null) {
							ox += elem.offsetLeft;
							oy += elem.offsetTop;
							elem = elem.offsetParent;
						}
						if (ev.hasOwnProperty('changedTouches')) {
							first = ev.changedTouches[0];
							pageX = first.pageX;
							pageY = first.pageY;
						} else {
							pageX = ev.pageX;
							pageY = ev.pageY;
						}
						return {
							'x': pageX - ox,
							'y': pageY - oy
						};
					}

					function _recompositeCanvases() {
							var main = _this[0];
							var tempctx = canvas.temp.getContext('2d');
							var mainctx = main.getContext('2d');
							// clear the temp
							canvas.temp.width = canvas.temp.width;
							// 把 canvas.draw 覆蓋到 drawImage 上
							tempctx.drawImage(canvas.draw, 0, 0);
							// 以 source-atop 的方式把 backimage 畫到 tempctx 上
							tempctx.globalCompositeOperation = 'source-atop';
							tempctx.drawImage(backimage.img, 0, 0);
							// mainctx => 灰色前景 (還沒有刮掉的地方)
							mainctx.fillStyle = "#888";
							mainctx.fillRect(0, 0, backimage.img.width, backimage.img.height);
							// 最後把 canvas.temp 覆蓋到 mainctx 上
							mainctx.drawImage(canvas.temp, 0, 0);
					}

					function _setupCanvases() {
						var c = _this[0];
						// 取得圖片長寬
						c.width = backimage.img.width;
						c.height = backimage.img.height;
						canvas.temp = document.createElement('canvas');
						canvas.draw = document.createElement('canvas');
						canvas.temp.width = canvas.draw.width = c.width;
						canvas.temp.height = canvas.draw.height = c.height;
						_recompositeCanvases();


						function mousedown_handler(e) {
							var local = getLocalCoords(c, e);
							mouseDown = true;
							scratch(canvas.draw, local.x, local.y, true);
							_recompositeCanvases();
							if (e.cancelable) {
								e.preventDefault();
							}
							return false;
						};

						function mousemove_handler(e) {
							if (!mouseDown) {
								return true;
							}
							var local = getLocalCoords(c, e);
							scratch(canvas.draw, local.x, local.y, false);
							_recompositeCanvases();
							if (e.cancelable) {
								e.preventDefault();
							}
							return false;
						};

						function mouseup_handler(e) {
							if (mouseDown) {
								mouseDown = false;
								if (e.cancelable) {
									e.preventDefault();
								}
								return false;
							}
							return true;
						};

						c.addEventListener('mousedown', mousedown_handler, false);
						c.addEventListener('touchstart', mousedown_handler, false);
						c.addEventListener('mousemove', mousemove_handler, false);
						c.addEventListener('touchmove', mousemove_handler, false);
						c.addEventListener('mouseup', mouseup_handler, false);
						c.addEventListener('touchend', mouseup_handler, false);
				   }

				backimage.img = document.createElement('img');
				backimage.img.src = backimage.url;
				backimage.img.addEventListener('load', _setupCanvases, false);

			});
		};

		$.fn.getprize.defaults = {
			imgUrl : ''
		};

		var imgs = ['/img/test/g1.jpg','/img/test/g2.jpg','/img/test/g3.jpg'];
		function _getRandomNum(n) {
			return Math.floor(Math.random()*n)+1;
		}
		$('.ggk').each(function(index){
			var _this = $(this);
			_this.getprize({'imgUrl' : imgs[_getRandomNum(3)-1]});
		});
	});


	</script>
	 <style type="text/css">
        .ggk {border: 1px solid #666;cursor: pointer;}
        img.output { border: 1px solid #666; }
        .main {
        	width:100%;
        	height: 100%;
			margin: 0px auto;
			border: 1px solid red;
			text-align: center;
			overflow: hidden;
			zoom:1;
        }
        .l-ggk ,.l-btns {
        	margin:0px auto;

        }
        
        .l-btns ul {
        	margin:0px auto;
        	list-style: none;
        	padding:0px;
        	overflow: hidden;
        	zoom:1;
        	width: 300px;
			margin-bottom: 10px;
			margin-top:40px;
        }
        .l-btns ul li {
        	display: block;
        	float: left;
        	
        }

       	.left-times {
       		text-align: center;
       		font-size: 16px;

       		line-height: 38px;
       		margin:10px auto;
       		height: 38px;
       		width: 244px;
       	}
       	.prize-info {
       		margin-bottom: 10px;
       	}
    </style>
</head>

<body>
	<div class="main">
		<div class="l-btns">
			<ul>
				<li><a><img src="/img/test/dh.jpg"></a></li>
				<li><a><img src="/img/test/dh.jpg"></a></li>
				<li><a><img src="/img/test/dh.jpg"></a></li>
			</ul>
		</div>
		<div class="left-times">
			剩余次数
		</div>
		<div class="prize-info">
			<img src="/img/test/prizeInfo.jpg" />
		</div>
		<div class="l-ggk">
			<canvas class="ggk"></canvas> 
			<canvas class="ggk"></canvas> 
			<canvas class="ggk"></canvas> 
		</div>
	</div>   
</body>
</html>